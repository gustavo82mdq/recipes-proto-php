<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: model/v1/recipes.proto

namespace recipes;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>model.v1.Ingredient</code>
 */
class Ingredient extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.google.protobuf.StringValue name = 1 [json_name = "name"];</code>
     */
    protected $name = null;
    /**
     * Generated from protobuf field <code>.model.v1.Unit unit = 4 [json_name = "unit"];</code>
     */
    protected $unit = null;
    protected $amount;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\StringValue $name
     *     @type \Google\Protobuf\StringValue $value
     *     @type \Google\Protobuf\DoubleValue $quantity
     *     @type \recipes\Unit $unit
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Model\V1\Recipes::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.StringValue name = 1 [json_name = "name"];</code>
     * @return \Google\Protobuf\StringValue|null
     */
    public function getName()
    {
        return $this->name;
    }

    public function hasName()
    {
        return isset($this->name);
    }

    public function clearName()
    {
        unset($this->name);
    }

    /**
     * Returns the unboxed value from <code>getName()</code>

     * Generated from protobuf field <code>.google.protobuf.StringValue name = 1 [json_name = "name"];</code>
     * @return string|null
     */
    public function getNameUnwrapped()
    {
        return $this->readWrapperValue("name");
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.StringValue name = 1 [json_name = "name"];</code>
     * @param \Google\Protobuf\StringValue $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\StringValue::class);
        $this->name = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\StringValue object.

     * Generated from protobuf field <code>.google.protobuf.StringValue name = 1 [json_name = "name"];</code>
     * @param string|null $var
     * @return $this
     */
    public function setNameUnwrapped($var)
    {
        $this->writeWrapperValue("name", $var);
        return $this;}

    /**
     * Generated from protobuf field <code>.google.protobuf.StringValue value = 2 [json_name = "value"];</code>
     * @return \Google\Protobuf\StringValue|null
     */
    public function getValue()
    {
        return $this->readOneof(2);
    }

    public function hasValue()
    {
        return $this->hasOneof(2);
    }

    /**
     * Returns the unboxed value from <code>getValue()</code>

     * Generated from protobuf field <code>.google.protobuf.StringValue value = 2 [json_name = "value"];</code>
     * @return string|null
     */
    public function getValueUnwrapped()
    {
        return $this->readWrapperValue("value");
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.StringValue value = 2 [json_name = "value"];</code>
     * @param \Google\Protobuf\StringValue $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\StringValue::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\StringValue object.

     * Generated from protobuf field <code>.google.protobuf.StringValue value = 2 [json_name = "value"];</code>
     * @param string|null $var
     * @return $this
     */
    public function setValueUnwrapped($var)
    {
        $this->writeWrapperValue("value", $var);
        return $this;}

    /**
     * Generated from protobuf field <code>.google.protobuf.DoubleValue quantity = 3 [json_name = "quantity"];</code>
     * @return \Google\Protobuf\DoubleValue|null
     */
    public function getQuantity()
    {
        return $this->readOneof(3);
    }

    public function hasQuantity()
    {
        return $this->hasOneof(3);
    }

    /**
     * Returns the unboxed value from <code>getQuantity()</code>

     * Generated from protobuf field <code>.google.protobuf.DoubleValue quantity = 3 [json_name = "quantity"];</code>
     * @return float|null
     */
    public function getQuantityUnwrapped()
    {
        return $this->readWrapperValue("quantity");
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.DoubleValue quantity = 3 [json_name = "quantity"];</code>
     * @param \Google\Protobuf\DoubleValue $var
     * @return $this
     */
    public function setQuantity($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\DoubleValue::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\DoubleValue object.

     * Generated from protobuf field <code>.google.protobuf.DoubleValue quantity = 3 [json_name = "quantity"];</code>
     * @param float|null $var
     * @return $this
     */
    public function setQuantityUnwrapped($var)
    {
        $this->writeWrapperValue("quantity", $var);
        return $this;}

    /**
     * Generated from protobuf field <code>.model.v1.Unit unit = 4 [json_name = "unit"];</code>
     * @return \recipes\Unit|null
     */
    public function getUnit()
    {
        return $this->unit;
    }

    public function hasUnit()
    {
        return isset($this->unit);
    }

    public function clearUnit()
    {
        unset($this->unit);
    }

    /**
     * Generated from protobuf field <code>.model.v1.Unit unit = 4 [json_name = "unit"];</code>
     * @param \recipes\Unit $var
     * @return $this
     */
    public function setUnit($var)
    {
        GPBUtil::checkMessage($var, \recipes\Unit::class);
        $this->unit = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getAmount()
    {
        return $this->whichOneof("amount");
    }

}

