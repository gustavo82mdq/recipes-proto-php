<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: model/v1/recipes.proto

namespace recipes\Unit;

use UnexpectedValueException;

/**
 * Protobuf type <code>model.v1.Unit.UnitOfMeasure</code>
 */
class UnitOfMeasure
{
    /**
     * Generated from protobuf enum <code>UNIT_OF_MEASURE_UNIT_UNSPECIFIED = 0;</code>
     */
    const UNIT_OF_MEASURE_UNIT_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>UNIT_OF_MEASURE_TEASPOON = 1;</code>
     */
    const UNIT_OF_MEASURE_TEASPOON = 1;
    /**
     * Generated from protobuf enum <code>UNIT_OF_MEASURE_TABLESPOON = 2;</code>
     */
    const UNIT_OF_MEASURE_TABLESPOON = 2;
    /**
     * Generated from protobuf enum <code>UNIT_OF_MEASURE_GRAMS = 3;</code>
     */
    const UNIT_OF_MEASURE_GRAMS = 3;
    /**
     * Generated from protobuf enum <code>UNIT_OF_MEASURE_KILOGRAMS = 4;</code>
     */
    const UNIT_OF_MEASURE_KILOGRAMS = 4;
    /**
     * Generated from protobuf enum <code>UNIT_OF_MEASURE_MILLILITERS = 5;</code>
     */
    const UNIT_OF_MEASURE_MILLILITERS = 5;
    /**
     * Generated from protobuf enum <code>UNIT_OF_MEASURE_LITER = 6;</code>
     */
    const UNIT_OF_MEASURE_LITER = 6;

    private static $valueToName = [
        self::UNIT_OF_MEASURE_UNIT_UNSPECIFIED => 'UNIT_OF_MEASURE_UNIT_UNSPECIFIED',
        self::UNIT_OF_MEASURE_TEASPOON => 'UNIT_OF_MEASURE_TEASPOON',
        self::UNIT_OF_MEASURE_TABLESPOON => 'UNIT_OF_MEASURE_TABLESPOON',
        self::UNIT_OF_MEASURE_GRAMS => 'UNIT_OF_MEASURE_GRAMS',
        self::UNIT_OF_MEASURE_KILOGRAMS => 'UNIT_OF_MEASURE_KILOGRAMS',
        self::UNIT_OF_MEASURE_MILLILITERS => 'UNIT_OF_MEASURE_MILLILITERS',
        self::UNIT_OF_MEASURE_LITER => 'UNIT_OF_MEASURE_LITER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(UnitOfMeasure::class, \recipes\Unit_UnitOfMeasure::class);

